#line 1 "3rd_pty_drv\\Nokia5110.c"




























 

























#line 1 "3rd_pty_drv\\Nokia5110.h"




























 







































static const char ASCII[][5] = {
  {0x00, 0x00, 0x00, 0x00, 0x00} 
  ,{0x00, 0x00, 0x5f, 0x00, 0x00} 
  ,{0x00, 0x07, 0x00, 0x07, 0x00} 
  ,{0x14, 0x7f, 0x14, 0x7f, 0x14} 
  ,{0x24, 0x2a, 0x7f, 0x2a, 0x12} 
  ,{0x23, 0x13, 0x08, 0x64, 0x62} 
  ,{0x36, 0x49, 0x55, 0x22, 0x50} 
  ,{0x00, 0x05, 0x03, 0x00, 0x00} 
  ,{0x00, 0x1c, 0x22, 0x41, 0x00} 
  ,{0x00, 0x41, 0x22, 0x1c, 0x00} 
  ,{0x14, 0x08, 0x3e, 0x08, 0x14} 
  ,{0x08, 0x08, 0x3e, 0x08, 0x08} 
  ,{0x00, 0x50, 0x30, 0x00, 0x00} 
  ,{0x08, 0x08, 0x08, 0x08, 0x08} 
  ,{0x00, 0x60, 0x60, 0x00, 0x00} 
  ,{0x20, 0x10, 0x08, 0x04, 0x02} 
  ,{0x3e, 0x51, 0x49, 0x45, 0x3e} 
  ,{0x00, 0x42, 0x7f, 0x40, 0x00} 
  ,{0x42, 0x61, 0x51, 0x49, 0x46} 
  ,{0x21, 0x41, 0x45, 0x4b, 0x31} 
  ,{0x18, 0x14, 0x12, 0x7f, 0x10} 
  ,{0x27, 0x45, 0x45, 0x45, 0x39} 
  ,{0x3c, 0x4a, 0x49, 0x49, 0x30} 
  ,{0x01, 0x71, 0x09, 0x05, 0x03} 
  ,{0x36, 0x49, 0x49, 0x49, 0x36} 
  ,{0x06, 0x49, 0x49, 0x29, 0x1e} 
  ,{0x00, 0x36, 0x36, 0x00, 0x00} 
  ,{0x00, 0x56, 0x36, 0x00, 0x00} 
  ,{0x08, 0x14, 0x22, 0x41, 0x00} 
  ,{0x14, 0x14, 0x14, 0x14, 0x14} 
  ,{0x00, 0x41, 0x22, 0x14, 0x08} 
  ,{0x02, 0x01, 0x51, 0x09, 0x06} 
  ,{0x32, 0x49, 0x79, 0x41, 0x3e} 
  ,{0x7e, 0x11, 0x11, 0x11, 0x7e} 
  ,{0x7f, 0x49, 0x49, 0x49, 0x36} 
  ,{0x3e, 0x41, 0x41, 0x41, 0x22} 
  ,{0x7f, 0x41, 0x41, 0x22, 0x1c} 
  ,{0x7f, 0x49, 0x49, 0x49, 0x41} 
  ,{0x7f, 0x09, 0x09, 0x09, 0x01} 
  ,{0x3e, 0x41, 0x49, 0x49, 0x7a} 
  ,{0x7f, 0x08, 0x08, 0x08, 0x7f} 
  ,{0x00, 0x41, 0x7f, 0x41, 0x00} 
  ,{0x20, 0x40, 0x41, 0x3f, 0x01} 
  ,{0x7f, 0x08, 0x14, 0x22, 0x41} 
  ,{0x7f, 0x40, 0x40, 0x40, 0x40} 
  ,{0x7f, 0x02, 0x0c, 0x02, 0x7f} 
  ,{0x7f, 0x04, 0x08, 0x10, 0x7f} 
  ,{0x3e, 0x41, 0x41, 0x41, 0x3e} 
  ,{0x7f, 0x09, 0x09, 0x09, 0x06} 
  ,{0x3e, 0x41, 0x51, 0x21, 0x5e} 
  ,{0x7f, 0x09, 0x19, 0x29, 0x46} 
  ,{0x46, 0x49, 0x49, 0x49, 0x31} 
  ,{0x01, 0x01, 0x7f, 0x01, 0x01} 
  ,{0x3f, 0x40, 0x40, 0x40, 0x3f} 
  ,{0x1f, 0x20, 0x40, 0x20, 0x1f} 
  ,{0x3f, 0x40, 0x38, 0x40, 0x3f} 
  ,{0x63, 0x14, 0x08, 0x14, 0x63} 
  ,{0x07, 0x08, 0x70, 0x08, 0x07} 
  ,{0x61, 0x51, 0x49, 0x45, 0x43} 
  ,{0x00, 0x7f, 0x41, 0x41, 0x00} 
  ,{0x02, 0x04, 0x08, 0x10, 0x20} 
  ,{0x00, 0x41, 0x41, 0x7f, 0x00} 
  ,{0x04, 0x02, 0x01, 0x02, 0x04} 
  ,{0x40, 0x40, 0x40, 0x40, 0x40} 
  ,{0x00, 0x01, 0x02, 0x04, 0x00} 
  ,{0x20, 0x54, 0x54, 0x54, 0x78} 
  ,{0x7f, 0x48, 0x44, 0x44, 0x38} 
  ,{0x38, 0x44, 0x44, 0x44, 0x20} 
  ,{0x38, 0x44, 0x44, 0x48, 0x7f} 
  ,{0x38, 0x54, 0x54, 0x54, 0x18} 
  ,{0x08, 0x7e, 0x09, 0x01, 0x02} 
  ,{0x0c, 0x52, 0x52, 0x52, 0x3e} 
  ,{0x7f, 0x08, 0x04, 0x04, 0x78} 
  ,{0x00, 0x44, 0x7d, 0x40, 0x00} 
  ,{0x20, 0x40, 0x44, 0x3d, 0x00} 
  ,{0x7f, 0x10, 0x28, 0x44, 0x00} 
  ,{0x00, 0x41, 0x7f, 0x40, 0x00} 
  ,{0x7c, 0x04, 0x18, 0x04, 0x78} 
  ,{0x7c, 0x08, 0x04, 0x04, 0x78} 
  ,{0x38, 0x44, 0x44, 0x44, 0x38} 
  ,{0x7c, 0x14, 0x14, 0x14, 0x08} 
  ,{0x08, 0x14, 0x14, 0x18, 0x7c} 
  ,{0x7c, 0x08, 0x04, 0x04, 0x08} 
  ,{0x48, 0x54, 0x54, 0x54, 0x20} 
  ,{0x04, 0x3f, 0x44, 0x40, 0x20} 
  ,{0x3c, 0x40, 0x40, 0x20, 0x7c} 
  ,{0x1c, 0x20, 0x40, 0x20, 0x1c} 
  ,{0x3c, 0x40, 0x30, 0x40, 0x3c} 
  ,{0x44, 0x28, 0x10, 0x28, 0x44} 
  ,{0x0c, 0x50, 0x50, 0x50, 0x3c} 
  ,{0x44, 0x64, 0x54, 0x4c, 0x44} 
  ,{0x00, 0x08, 0x36, 0x41, 0x00} 
  ,{0x00, 0x00, 0x7f, 0x00, 0x00} 
  ,{0x00, 0x41, 0x36, 0x08, 0x00} 
  ,{0x10, 0x08, 0x08, 0x10, 0x08} 

  ,{0x1f, 0x24, 0x7c, 0x24, 0x1f} 
};












void Nokia5110_Init(void);













void Nokia5110_OutChar(unsigned char data);








void Nokia5110_OutString(char *ptr);







void Nokia5110_OutUDec(unsigned short n);








void Nokia5110_SetCursor(unsigned char newX, unsigned char newY);






void Nokia5110_Clear(void);






void Nokia5110_DrawFullImage(const char *ptr);
#line 56 "3rd_pty_drv\\Nokia5110.c"

#line 83 "3rd_pty_drv\\Nokia5110.c"
                                            





                                            
                                            





enum typeOfWrite{
  COMMAND,                              
  DATA                                  
};





















void static lcdwrite(enum typeOfWrite type, char message){
  if(type == COMMAND){
                                        
    while(((*((volatile unsigned long *)0x4000800C))&0x00000010)==0x00000010){};
    (*((volatile unsigned long *)0x40004100)) = 0;
    (*((volatile unsigned long *)0x40008008)) = message;                
                                        
    while(((*((volatile unsigned long *)0x4000800C))&0x00000010)==0x00000010){};
  } else{
    while(((*((volatile unsigned long *)0x4000800C))&0x00000002)==0){}; 
    (*((volatile unsigned long *)0x40004100)) = 0x40;
    (*((volatile unsigned long *)0x40008008)) = message;                
  }
}












void Nokia5110_Init(void){
  volatile unsigned long delay;
  (*((volatile unsigned long *)0x400FE104)) |= 0x00000010;  
  (*((volatile unsigned long *)0x400FE108)) |= 0x00000001; 
  delay = (*((volatile unsigned long *)0x400FE108));               
  (*((volatile unsigned long *)0x40004400)) |= 0xC0;             
  (*((volatile unsigned long *)0x40004420)) |= 0x2C;           
  (*((volatile unsigned long *)0x40004420)) &= ~0xC0;          
  (*((volatile unsigned long *)0x4000451C)) |= 0xEC;             
                                        
  (*((volatile unsigned long *)0x4000452C)) = ((*((volatile unsigned long *)0x4000452C))&0xFF0F00FF)+0x00202200;
                                        
  (*((volatile unsigned long *)0x4000452C)) = ((*((volatile unsigned long *)0x4000452C))&0x00FFFFFF)+0x00000000;
  (*((volatile unsigned long *)0x40004528)) &= ~0xEC;          
  (*((volatile unsigned long *)0x40008004)) &= ~0x00000002;           
  (*((volatile unsigned long *)0x40008004)) &= ~0x00000004;            
                                        
  (*((volatile unsigned long *)0x40008FC8)) = ((*((volatile unsigned long *)0x40008FC8))&~0x0000000F)+0x00000000;
                                        
  (*((volatile unsigned long *)0x40008010)) = ((*((volatile unsigned long *)0x40008010))&~0x000000FF)+16;
  (*((volatile unsigned long *)0x40008000)) &= ~(0x0000FF00 |       
                  0x00000080 |         
                  0x00000040);         
                                        
  (*((volatile unsigned long *)0x40008000)) = ((*((volatile unsigned long *)0x40008000))&~0x00000030)+0x00000000;
                                        
  (*((volatile unsigned long *)0x40008000)) = ((*((volatile unsigned long *)0x40008000))&~0x0000000F)+0x00000007;
  (*((volatile unsigned long *)0x40008004)) |= 0x00000002;            
 
  (*((volatile unsigned long *)0x40004200)) = 0;                    
  for(delay=0; delay<10; delay=delay+1);
  (*((volatile unsigned long *)0x40004200)) = 0x80;                   

  lcdwrite(COMMAND, 0x21);              
                                        
  lcdwrite(COMMAND, 0xBA);          
	lcdwrite(COMMAND, 0x04);              
  lcdwrite(COMMAND, 0x14);              

  lcdwrite(COMMAND, 0x20);              
  lcdwrite(COMMAND, 0x0C);              
}













void Nokia5110_OutChar(unsigned char data){
  int i;
  lcdwrite(DATA, 0x00);                 
  for(i=0; i<5; i=i+1){
    lcdwrite(DATA,ASCII[data - 0x20][i]);
  }
  lcdwrite(DATA, 0x00);                 
}








void Nokia5110_OutString(char *ptr){
  while(*ptr)
	{
    Nokia5110_OutChar((unsigned char)*ptr);
    ptr = ptr + 1;
  }
}







void Nokia5110_OutUDec(unsigned short n){
  if(n < 10){
    Nokia5110_OutString("    ");
    Nokia5110_OutChar(n+'0');  
  } else if(n<100){
    Nokia5110_OutString("   ");
    Nokia5110_OutChar(n/10+'0');  
    Nokia5110_OutChar(n%10+'0');  
  } else if(n<1000){
    Nokia5110_OutString("  ");
    Nokia5110_OutChar(n/100+'0');  
    n = n%100;
    Nokia5110_OutChar(n/10+'0');  
    Nokia5110_OutChar(n%10+'0');  
  }
  else if(n<10000){
    Nokia5110_OutChar(' ');
    Nokia5110_OutChar(n/1000+'0');  
    n = n%1000;
    Nokia5110_OutChar(n/100+'0');  
    n = n%100;
    Nokia5110_OutChar(n/10+'0');  
    Nokia5110_OutChar(n%10+'0');  
  }
  else {
    Nokia5110_OutChar(n/10000+'0');  
    n = n%10000;
    Nokia5110_OutChar(n/1000+'0');  
    n = n%1000;
    Nokia5110_OutChar(n/100+'0');  
    n = n%100;
    Nokia5110_OutChar(n/10+'0');  
    Nokia5110_OutChar(n%10+'0');  
  }
}








void Nokia5110_SetCursor(unsigned char newX, unsigned char newY){
  if((newX > 11) || (newY > 5)){        
    return;                             
  }
  
  lcdwrite(COMMAND, 0x80|(newX*7));     
  lcdwrite(COMMAND, 0x40|newY);         
}






void Nokia5110_Clear(void){
  int i;
  for(i=0; i<(84*48/8); i=i+1){
    lcdwrite(DATA, 0x00);
  }
  Nokia5110_SetCursor(0, 0);
}






void Nokia5110_DrawFullImage(const char *ptr){
  int i;
  Nokia5110_SetCursor(0, 0);
  for(i=0; i<(84*48/8); i=i+1){
    lcdwrite(DATA, ptr[i]);
  }
}
